name: 'Translate Cura plugin'
description: 'Create and update translation of the Cura plugin'
inputs:
  translation_folder: # path to the translation directory usually i18n
    description: 'translation folder of the Cura plugin'
    required: true
    default: 'i18n'
  translation_name: # name of the translation template and locale files (will be used to include translation)
    description: 'translation template and locale files name'
    required: true
  plugin_name: # will be dispayed in the translation files header
    description: 'plugin name'
    required: true
outputs:
  template_updated:
    description: ".pot template updated"
    value: ${{ steps.template_updated.outputs.updated }}
  locales_updated:
    description: ".mo file/files updated"
    value: ${{ steps.locale_updated.outputs.updated }}
runs:
  using: "composite"
  steps:
    - uses: ConorMacBride/install-package@v1
      with:
        apt: gettext

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check-out devops repository
      uses: actions/checkout@v3
      with:
        repository: fieldOfView/cura-plugin-translation-action
        ref: feature_definitioncontainer_translation
        path: cura-plugin-translation-action

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: "Ensure translation folder exists"
      run: mkdir -p "${{ inputs.translation_folder }}"
      shell: bash

    - name: "Ensure translation folder exists"
      run: mkdir -p i18n-temp
      shell: bash

    - name: "Check template file exists"
      id: template_exist
      run: echo "exists=$([[ -f ${{ inputs.translation_folder }}/${{ inputs.translation_name }}.pot ]] && echo true)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Hash current .pot messages
      if: ${{ steps.template_exist.outputs.exists }}
      id: hash_before
      run: echo "i18n_hash=$(grep '^msgid' ${{ inputs.translation_folder }}/${{ inputs.translation_name }}.pot | sort | sha1sum)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Update .pot from Python files
      continue-on-error: true
      run: xgettext --package-name='${{ inputs.plugin_name }}' -o i18n-temp/python.pot  --language=python     --from-code=UTF-8 -ki18n:1 -ki18nc:1c,2 -ki18np:1,2 -ki18ncp:1c,2,3 $(find -L . -name \*.py)
      shell: bash

    - name: Update .pot from QML files
      continue-on-error: true
      run: xgettext --package-name='${{ inputs.plugin_name }}' -o i18n-temp/qml.pot     --language=javascript --from-code=UTF-8 -ki18n:1 -ki18nc:1c,2 -ki18np:1,2 -ki18ncp:1c,2,3 $(find -L . -name \*.qml)
      shell: bash

    - name: Create .pot files from .def.json files
      continue-on-error: true
      run: python cura-plugin-translation-action/getsettingsdefinitiontexts.py
      shell: bash

    - name: Merge into single .pot file
      run: xgettext -o ${{ inputs.translation_folder }}/${{ inputs.translation_name }}.pot                    --from-code=UTF-8   i18n-temp/*.pot
      shell: bash

    - name: Remove separate .pot files for each .def.json file
      run: rm -rf i18n-temp
      shell: bash

    - name: Remove checked out action
      run: rm -rf cura-plugin-translation-action
      shell: bash

    - name: Hash new .pot messages
      id: hash_after
      run: echo "i18n_hash=$(grep '^msgid' ${{ inputs.translation_folder }}/${{ inputs.translation_name }}.pot | sort | sha1sum)" >> $GITHUB_OUTPUT
      shell: bash

    - if: ${{ !steps.exists.outputs.exists }}
      name: Add template to git repo
      id: git_add_pot
      run: git add -f ${{ inputs.translation_folder }}/${{ inputs.translation_name }}.pot
      shell: bash

    - if: ${{ steps.hash_after.outputs.i18n_hash != steps.hash_before.outputs.i18n_hash }}
      name: Set output value
      id: template_updated
      run: echo "updated=1" >> $GITHUB_OUTPUT
      shell: bash

    - if: ${{ steps.template_updated.outputs.updated == ''}}
      name: Reset .pot file/file
      run: git checkout -- ${{ inputs.translation_folder }}/${{ inputs.translation_name }}.pot
      shell: bash

    - if: ${{ steps.template_updated.outputs.updated }}
      name: Update .po files
      run: find ${{ inputs.translation_folder }} -name ${{ inputs.translation_name }}.po -exec msgmerge --update {} --backup=none ${{ inputs.translation_folder }}/${{ inputs.translation_name }}.pot \;
      shell: bash

    - if: ${{ steps.template_exist.outputs.exists }}
      id: mo_update_neened
      run: |
        for changed_po in `git diff-tree --no-commit-id --name-only -r ${{github.sha}}`; do
          if [[ ${changed_po} == *${{ inputs.translation_name }}.po ]]
          then
            echo ${changed_po} changed
            echo "needed=1" >> $GITHUB_OUTPUT
          fi
        done
      shell: bash

    - if: ${{ steps.template_updated.outputs.updated || steps.mo_update_neened.outputs.needed }}
      name: Ensure LC_MESSAGES folder exists
      run: find ${{ inputs.translation_folder }} -maxdepth 1 -name '*_*' -exec mkdir -p {}/LC_MESSAGES \;
      shell: bash

    - if: ${{ steps.template_updated.outputs.updated || steps.mo_update_neened.outputs.needed }}
      name: Update .mo files
      id: locale_updated
      run: |
        find ${{ inputs.translation_folder }} -maxdepth 1 -name '*_*' -exec msgfmt {}/${{ inputs.translation_name }}.po -o {}/LC_MESSAGES/${{ inputs.translation_name }}.mo \;
        echo "updated=1" >> $GITHUB_OUTPUT
      shell: bash
